/*
[k = 2]    3, 5, 17, 257, 65537, 4294967297, 18446744073709551615
[k = 2]    3, 5, 17, 257, 65537, 4294967307, 1676976737878111325
[k = 2]    3, 5, 17, 257, 65537, 4294967367, 259813301047285385
[k = 2]    3, 5, 17, 257, 65537, 4294967375, 233503093781227857
[k = 2]    3, 5, 17, 257, 65537, 4294968077, 23619394908814395
[k = 2]    3, 5, 17, 257, 65537, 4294968165, 21227557884627347
[k = 2]    3, 5, 17, 257, 65537, 4294968305, 18282208526299887
[k = 2]    3, 5, 17, 257, 65537, 4294972905, 3288780203224487
[k = 2]    3, 5, 17, 257, 65537, 4294978395, 1662022861452077
[k = 2]    3, 5, 17, 257, 65537, 4295028995, 298983922990677
[k = 2]    3, 5, 17, 257, 65537, 4295038935, 257500129211417
[k = 2]    3, 5, 17, 257, 65537, 4295047007, 231424601693025
[k = 2]    3, 5, 17, 257, 65537, 4295755325, 23413007171307
[k = 2]    3, 5, 17, 257, 65537, 4295844117, 21042504669635
[k = 2]    3, 5, 17, 257, 65537, 4300626777, 3263735907095
[k = 2]    3, 5, 17, 257, 65537, 4357221587, 300607780005
[k = 2]    3, 5, 17, 257, 65543, 613622973, 8815156799949437
[k = 2]    3, 5, 17, 257, 65543, 613627757, 78010845360333
[k = 2]    3, 5, 17, 257, 65555, 226113003, 8596590110981999
[k = 2]    3, 5, 17, 257, 65583, 91446429, 1862725578762405
[k = 2]    3, 5, 17, 257, 65729, 22318913, 96139834027933695
[k = 2]    3, 5, 17, 257, 65855, 14660375, 175338855
[k = 2]    3, 5, 17, 257, 66023, 8884637, 90028574052093
[k = 2]    3, 5, 17, 257, 66035, 12360093, 29069129
[k = 2]    3, 5, 17, 257, 66527, 4399443, 249102573029243
[k = 2]    3, 5, 17, 257, 70953, 1015619, 5544845
[k = 2]    3, 5, 17, 257, 72113, 719417, 599253543
[k = 2]    3, 5, 17, 257, 72939, 645693, 6040018747905
[k = 2]    3, 5, 17, 257, 75273, 506627, 1912164594413
[k = 2]    3, 5, 17, 257, 85185, 288275, 19698725
[k = 2]    3, 5, 17, 257, 103943, 199577, 1593393
[k = 2]    3, 5, 17, 257, 104093, 176927, 1175218174293
[k = 2]    3, 5, 17, 263, 9585, 27948617, 125635487981969
[k = 2]    3, 5, 17, 263, 11159, 78249, 506759
[k = 2]    3, 5, 17, 269, 5279, 19059029, 809372846673
[k = 2]    3, 5, 17, 269, 5283, 5104049, 80419259566169
[k = 2]    3, 5, 17, 287, 2363, 4762259, 252056385
[k = 2]    3, 5, 17, 353, 929, 83623937, 6992962672132095
[k = 2]    3, 5, 17, 353, 929, 83623955, 368050746176997
[k = 2]    3, 5, 17, 353, 929, 84866225, 5712718767
[k = 2]    3, 5, 17, 353, 929, 107227427, 379892085
[k = 2]    3, 5, 17, 363, 887, 36705, 1780076619
[k = 2]    3, 5, 17, 365, 855, 7234467, 575712553701375
[k = 2]    3, 5, 17, 387, 755, 837215, 12806102345
[k = 2]    3, 5, 17, 419, 659, 172587, 68725637
[k = 2]    3, 5, 23, 95, 207, 215, 85803023
[k = 2]    3, 5, 27, 45, 233, 42489, 1389617
[k = 3]    2, 4, 10, 82, 6562, 43046722, 1853020188851840
[k = 3]    2, 4, 10, 82, 6562, 43046780, 31407164162062
[k = 3]    2, 4, 10, 82, 6562, 43054790, 229689861172
[k = 3]    2, 4, 10, 82, 6562, 43522792, 3935365610
[k = 3]    2, 4, 10, 82, 6620, 736058, 196103913974
[k = 3]    2, 4, 10, 82, 6634, 596210, 6152830648
[k = 3]    2, 4, 10, 82, 6652, 604844, 2314504
[k = 3]    2, 4, 10, 82, 6658, 450274, 19666383355520
[k = 3]    2, 4, 10, 82, 6710, 295432, 8032246822
[k = 3]    2, 4, 10, 82, 6764, 218582, 94163937194
[k = 3]    2, 4, 10, 82, 7138, 81154, 3800058773120
[k = 3]    2, 4, 10, 82, 7330, 62530, 3006742544000
[k = 3]    2, 4, 10, 82, 8422, 30332, 1399210
[k = 3]    2, 4, 10, 94, 580, 623854, 506609870
[k = 3]    2, 4, 10, 94, 604, 14408, 1217464
[k = 3]    2, 4, 10, 128, 220, 51130, 252028
[k = 3]    2, 4, 10, 142, 238, 874, 2363016320
[k = 3]    2, 4, 16, 26, 74, 2392, 589082624
[k = 3]    2, 4, 16, 28, 62, 1624, 2523538
66,20811848800317740943
*/


#include <bits/stdc++.h>
#include <gmpxx.h>
using namespace std;


using ll = long long;


void solve()
{
    int cnt = 0;
    mpz_class s = 0;
    ll A0, B0, A1, B1, A2, B2, A3, B3, A4, B4, A5, B5;
    mpz_class A6, B6;
    ll x1, x2, x3, x4, x5, x6;
    mpz_class x7;
    ll x1min, x1max, x2min, x2max, x3min, x3max, x4min, x4max, x5min, x5max, x6min, x6max;

    for (int k = 2; k <= 7; k++) {
        A0 = k;    B0 = 1;
        x1min = B0 / (A0-B0) + 1;
        x1max = (ll)ceil(1/(pow(1.0*A0/B0, 1.0/7)-1)) - 1;
        for (x1 = x1min; x1 <= x1max; x1++) {
            A1 = A0 * x1;    B1 = B0 * (x1+1);
            x2min = max(x1 + 1, B1 / (A1-B1) + 1);
            x2max = (ll)ceil(1/(pow(1.0*A1/B1, 1.0/6)-1)) - 1;
            for (x2 = x2min; x2 <= x2max; x2++) {
                A2 = A1 * x2;    B2 = B1 * (x2+1);
                x3min = max(x2 + 1, B2 / (A2-B2) + 1);
                x3max = (ll)ceil(1/(pow(1.0*A2/B2, 1.0/5)-1)) - 1;
                for (x3 = x3min; x3 <= x3max; x3++) {
                    A3 = A2 * x3;    B3 = B2 * (x3+1);
                    x4min = max(x3 + 1, B3 / (A3-B3) + 1);
                    x4max = (ll)ceil(1/(pow(1.0*A3/B3, 1.0/4)-1)) - 1;
                    for (x4 = x4min; x4 <= x4max; x4++) {
                        A4 = A3 * x4;    B4 = B3 * (x4+1);
                        x5min = max(x4 + 1, B4 / (A4-B4) + 1);
                        x5max = (ll)ceil(1/(pow(1.0*A4/B4, 1.0/3)-1)) - 1;
                        for (x5 = x5min; x5 <= x5max; x5++) {
                            A5 = A4 * x5;    B5 = B4 * (x5+1);
                            x6min = max(x5 + 1, B5 / (A5-B5) + 1);
                            x6max = min((ll)ceil(1/(sqrt(1.0*A5/B5)-1)) - 1, x6min + 100000000LL);
                            for (x6 = x6min; x6 <= x6max; x6++) {
                                unsigned long A5L = (unsigned long)(A5 & 0xFFFFFFFFLL);
                                unsigned long A5H = (unsigned long)(A5 >> 32);
                                unsigned long B5L = (unsigned long)(B5 & 0xFFFFFFFFLL);
                                unsigned long B5H = (unsigned long)(B5 >> 32);
                                unsigned long x6L = (unsigned long)(x6 & 0xFFFFFFFFLL);
                                unsigned long x6H = (unsigned long)(x6 >> 32);
                                unsigned long x61L = (unsigned long)((x6 + 1) & 0xFFFFFFFFLL);
                                unsigned long x61H = (unsigned long)((x6 + 1) >> 32);
                                mpz_class A6_1 = A5H;    A6_1 <<= 32;    A6_1 += A5L;
                                mpz_class A6_2 = x6H;    A6_2 <<= 32;    A6_2 += x6L;
                                A6 = A6_1 * A6_2;
                                mpz_class B6_1 = B5H;    B6_1 <<= 32;    B6_1 += B5L;
                                mpz_class B6_2 = x61H;    B6_2 <<= 32;    B6_2 += x61L;
                                B6 = B6_1 * B6_2;
                                if ((B6-1) % (A6-B6) == 0) {
                                    x7 = (B6-1) / (A6-B6);
                                    cnt++;
                                    mpz_class x;
                                    x = (unsigned long)(x1 >> 32);    x <<= 32;    x += (unsigned long)(x1 & 0xFFFFFFFFLL);    s += x;
                                    x = (unsigned long)(x2 >> 32);    x <<= 32;    x += (unsigned long)(x2 & 0xFFFFFFFFLL);    s += x;
                                    x = (unsigned long)(x3 >> 32);    x <<= 32;    x += (unsigned long)(x3 & 0xFFFFFFFFLL);    s += x;
                                    x = (unsigned long)(x4 >> 32);    x <<= 32;    x += (unsigned long)(x4 & 0xFFFFFFFFLL);    s += x;
                                    x = (unsigned long)(x5 >> 32);    x <<= 32;    x += (unsigned long)(x5 & 0xFFFFFFFFLL);    s += x;
                                    x = (unsigned long)(x6 >> 32);    x <<= 32;    x += (unsigned long)(x6 & 0xFFFFFFFFLL);    s += x;
                                    s += x7 + 7;
                                    cout << "[k = " << k << "]    " << x1+1 << ", " << x2+1 << ", " << x3+1 << ", "
                                         << x4+1 << ", " << x5+1 << ", " << x6+1 << ", " << x7+1 << endl;
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    cout << cnt << "," << s << endl;
}


int main()
{
    solve();
    return 0;
}
