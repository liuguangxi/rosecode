/*
0 < x <= y <= z
x^2 + y^2 + z^2 − x*y − y*z − z*x − x − y − z = 0 =>
z = 1/2 * (1 + x + y - d) or 1/2 * (1 + x + y + d)
d = sqrt(1 + 6 * x - 3 * x^2 + 6 * y + 6 * x*y - 3 * y^2)
d2 = 1 + 6 * x - 3 * x^2 + 6 * y + 6 * x*y - 3 * y^2 is square
x = (u - v) / 2, y = (u + v) / 2 =>
d2 = 1 + 6*u - 3*v^2 = d^2 =>
u = (d^2 + 3*v^2 - 1) / 6 is positive integer =>
(1)  d = 6*k1+1, v = 6*k2
(2)  d = 6*k1+1, v = 6*k2+2
(3)  d = 6*k1+1, v = 6*k2+4
(4)  d = 6*k1+2, v = 6*k2+1
(5)  d = 6*k1+2, v = 6*k2+3
(6)  d = 6*k1+2, v = 6*k2+5
(7)  d = 6*k1+4, v = 6*k2+1
(8)  d = 6*k1+4, v = 6*k2+3
(9)  d = 6*k1+4, v = 6*k2+5
(10) d = 6*k1+5, v = 6*k2
(11) d = 6*k1+5, v = 6*k2+2
(12) d = 6*k1+5, v = 6*k2+4

=>

(1)
x = k1 + 3*k1^2 - 3*k2 + 9*k2^2
y = k1 + 3*k1^2 + 3*k2 + 9*k2^2
z = 1 + 4*k1 + 3*k1^2 + 9*k2^2
where (k2 == 0 && k1 >= 1) || (1 <= k2 <= k1)

(2)
x = k1 + 3*k1^2 + 3*k2 + 9*k2^2
y = 2 + k1 + 3*k1^2 + 9*k2 + 9*k2^2
z = 2 + 4*k1 + 3*k1^2 + 6*k2 + 9*k2^2
where (k2 == 0 && k1 >= 1) || (1 <= k2 <= k1)

(3)
x = 2 + k1 + 3*k1^2 + 9*k2 + 9*k2^2
y = 6 + k1 + 3*k1^2 + 15*k2 + 9*k2^2
z = 5 + 4*k1 + 3*k1^2 + 12*k2 + 9*k2^2
where k2 >= 0 && k1 - k2 >= 1

(4)
x = 2*k1 + 3*k1^2 + 9*k2^2
y = 1 + 2*k1 + 3*k1^2 + 6*k2 + 9*k2^2
z = 2 + 5*k1 + 3*k1^2 + 3*k2 + 9*k2^2
where (k2 == 0 && k1 >= 1) || (1 <= k2 <= k1)

(5)
x = 1 + 2*k1 + 3*k1^2 + 6*k2 + 9*k2^2
y = 4 + 2*k1 + 3*k1^2 + 12*k2 + 9*k2^2
z = 4 + 5*k1 + 3*k1^2 + 9*k2 + 9*k2^2
where 0 <= k2 <= k1

(6)
x = 4 + 2*k1 + 3*k1^2 + 12*k2 + 9*k2^2
y = 9 + 2*k1 + 3*k1^2 + 18*k2 + 9*k2^2
z = 8 + 5*k1 + 3*k1^2 + 15*k2 + 9*k2^2
where k2 >= 0 && k1 - k2 >= 1

(7)
x = 1 + 4*k1 + 3*k1^2 + 9*k2^2
y = 2 + 4*k1 + 3*k1^2 + 6*k2 + 9*k2^2
z = 4 + 7*k1 + 3*k1^2 + 3*k2 + 9*k2^2
where 0 <= k2 <= k1

(8)
x = 2 + 4*k1 + 3*k1^2 + 6*k2 + 9*k2^2
y = 5 + 4*k1 + 3*k1^2 + 12*k2 + 9*k2^2
z = 6 + 7*k1 + 3*k1^2 + 9*k2 + 9*k2^2
where 0 <= k2 <= k1

(9)
x = 5 + 4*k1 + 3*k1^2 + 12*k2 + 9*k2^2
y = 10 + 4*k1 + 3*k1^2 + 18*k2 + 9*k2^2
z = 10 + 7*k1 + 3*k1^2 + 15*k2 + 9*k2^2
where 0 <= k2 <= k1

(10)
x = 2 + 5*k1 + 3*k1^2 - 3*k2 + 9*k2^2
y = 2 + 5*k1 + 3*k1^2 + 3*k2 + 9*k2^2
z = 5 + 8*k1 + 3*k1^2 + 9*k2^2
where k2 >= 0 && k1 - k2 >= -1

(11)
x = 2 + 5*k1 + 3*k1^2 + 3*k2 + 9*k2^2
y = 4 + 5*k1 + 3*k1^2 + 9*k2 + 9*k2^2
z = 6 + 8*k1 + 3*k1^2 + 6*k2 + 9*k2^2
where 0 <= k2 <= k1

(12)
x = 4 + 5*k1 + 3*k1^2 + 9*k2 + 9*k2^2
y = 8 + 5*k1 + 3*k1^2 + 15*k2 + 9*k2^2
z = 9 + 8*k1 + 3*k1^2 + 12*k2 + 9*k2^2
where 0 <= k2 <= k1
*/


S1(n) = Mod(n * (n+1) / 2, M);

S2(n) = Mod(n * (n+1) * (2*n+1) / 6, M);


{
N = 10^14;
M = 10^9;

c = 0; s = 0;


/* (1) */
\\ k2 = 0, k1 >= 1 => z = 1 + 4*k1 + 3*k1^2 <= N
k1max = floor((sqrt(3*N+1)-2)/3);
c += k1max;
s += 9*S2(k1max) + 6*S1(k1max) + k1max;

\\ 1 <= k2 <= k1 => z = 1 + 4*k1 + 3*k1^2 + 9*k2^2 <= N
for (k2 = 1, N,
    if (12*k2^2 + 4*k2 + 1 > N, break);
    t = 1+9*k2^2-N;
    k1max = floor((sqrt(4-3*t)-2)/3);
    c += k1max - (k2 - 1);
    s += (27*k2^2 + 1)*(k1max - (k2-1)) + 6*(S1(k1max) - S1(k2-1)) + 9*(S2(k1max) - S2(k2-1));
);
print("(1) ", c, ",", lift(s));


/* (2) */
\\ k2 = 0, k1 >= 1 => z = 3*k1^2 + 4*k1 + 2 <= N
k1max = floor((sqrt(3*N-2)-2)/3);
c += k1max;
s += 9*S2(k1max) + 6*S1(k1max) + 4*k1max;

\\ 1 <= k2 <= k1 => z = 2 + 4*k1 + 3*k1^2 + 6*k2 + 9*k2^2 <= N
for (k2 = 1, N,
    if (12*k2^2 + 10*k2 + 2 > N, break);
    t = 2+6*k2+9*k2^2-N;
    k1max = floor((sqrt(4-3*t)-2)/3);
    c += k1max - (k2 - 1);
    s += (27*k2^2 + 18*k2 + 4)*(k1max - (k2-1)) + 6*(S1(k1max) - S1(k2-1)) + 9*(S2(k1max) - S2(k2-1));
);
print("(2) ", c, ",", lift(s));


/* (3) */
for (k2 = 0, N,
    if (12*k2^2 + 22*k2 + 12 > N, break);
    t = 5+12*k2+9*k2^2-N;
    k1max = floor((sqrt(4-3*t)-2)/3);
    c += k1max - k2;
    s += (27*k2^2 + 36*k2 + 13)*(k1max - k2) + 6*(S1(k1max) - S1(k2)) + 9*(S2(k1max) - S2(k2));
);
print("(3) ", c, ",", lift(s));


/* (4) */
\\ k2 = 0, k1 >= 1 => z = 3*k1^2 + 5*k1 + 2 <= N
k1max = floor((sqrt(12*N+1)-5)/6);
c += k1max;
s += 9*S2(k1max) + 9*S1(k1max) + 3*k1max;

\\ 1 <= k2 <= k1 => z = 2 + 5*k1 + 3*k1^2 + 3*k2 + 9*k2^2 <= N
for (k2 = 1, N,
    if (12*k2^2 + 8*k2 + 2 > N, break);
    t = 2+3*k2+9*k2^2-N;
    k1max = floor((sqrt(25-12*t)-5)/6);
    c += k1max - (k2 - 1);
    s += (27*k2^2 + 9*k2 + 3)*(k1max - (k2-1)) + 9*(S1(k1max) - S1(k2-1)) + 9*(S2(k1max) - S2(k2-1));
);
print("(4) ", c, ",", lift(s));


/* (5) */
for (k2 = 0, N,
    if (12*k2^2 + 14*k2 + 4 > N, break);
    t = 4+9*k2+9*k2^2-N;
    k1max = floor((sqrt(25-12*t)-5)/6);
    c += k1max - (k2 - 1);
    s += (27*k2^2 + 27*k2 + 9)*(k1max - (k2-1)) + 9*(S1(k1max) - S1(k2-1)) + 9*(S2(k1max) - S2(k2-1));
);
print("(5) ", c, ",", lift(s));


/* (6) */
for (k2 = 0, N,
    if (12*k2^2 + 26*k2 + 16 > N, break);
    t = 8+15*k2+9*k2^2-N;
    k1max = floor((sqrt(25-12*t)-5)/6);
    c += k1max - k2;
    s += (27*k2^2 + 45*k2 + 21)*(k1max - k2) + 9*(S1(k1max) - S1(k2)) + 9*(S2(k1max) - S2(k2));
);
print("(6) ", c, ",", lift(s));


/* (7) */
for (k2 = 0, N,
    if (12*k2^2 + 10*k2 + 4 > N, break);
    t = 4+3*k2+9*k2^2-N;
    k1max = floor((sqrt(49-12*t)-7)/6);
    c += k1max - (k2 - 1);
    s += (27*k2^2 + 9*k2 + 7)*(k1max - (k2-1)) + 15*(S1(k1max) - S1(k2-1)) + 9*(S2(k1max) - S2(k2-1));
);
print("(7) ", c, ",", lift(s));


/* (8) */
for (k2 = 0, N,
    if (12*k2^2 + 16*k2 + 6 > N, break);
    t = 6+9*k2+9*k2^2-N;
    k1max = floor((sqrt(49-12*t)-7)/6);
    c += k1max - (k2 - 1);
    s += (27*k2^2 + 27*k2 + 13)*(k1max - (k2-1)) + 15*(S1(k1max) - S1(k2-1)) + 9*(S2(k1max) - S2(k2-1));
);
print("(8) ", c, ",", lift(s));


/* (9) */
for (k2 = 0, N,
    if (12*k2^2 + 22*k2 + 10 > N, break);
    t = 10+15*k2+9*k2^2-N;
    k1max = floor((sqrt(49-12*t)-7)/6);
    c += k1max - (k2 - 1);
    s += (27*k2^2 + 45*k2 + 25)*(k1max - (k2-1)) + 15*(S1(k1max) - S1(k2-1)) + 9*(S2(k1max) - S2(k2-1));
);
print("(9) ", c, ",", lift(s));


/* (10) */
\\ k2 = 0, k1 >= 0 => z = 5 + 8*k1 + 3*k1^2 <= N
k1max = floor((sqrt(3*N+1)-4)/3);
c += k1max + 1;
s += 9*S2(k1max) + 18*S1(k1max) + 9*(k1max+1);

\\ k2 >= 1 && k1 - k2 >= -1 => z = 5 + 8*k1 + 3*k1^2 + 9*k2^2 <= N
for (k2 = 1, N,
    if (12*k2^2 + 2*k2 > N, break);
    t = 5+9*k2^2-N;
    k1max = floor((sqrt(16-3*t)-4)/3);
    c += k1max - (k2 - 2);
    s += (27*k2^2 + 9)*(k1max - (k2-2)) + 18*(S1(k1max) - S1(k2-2)) + 9*(S2(k1max) - S2(k2-2));
);
print("(10) ", c, ",", lift(s));


/* (11) */
for (k2 = 0, N,
    if (12*k2^2 + 14*k2 + 6 > N, break);
    t = 6+6*k2+9*k2^2-N;
    k1max = floor((sqrt(16-3*t)-4)/3);
    c += k1max - (k2 - 1);
    s += (27*k2^2 + 18*k2 + 12)*(k1max - (k2-1)) + 18*(S1(k1max) - S1(k2-1)) + 9*(S2(k1max) - S2(k2-1));
);
print("(11) ", c, ",", lift(s));


/* (12) */
for (k2 = 0, N,
    if (12*k2^2 + 20*k2 + 9 > N, break);
    t = 9+12*k2+9*k2^2-N;
    k1max = floor((sqrt(16-3*t)-4)/3);
    c += k1max - (k2 - 1);
    s += (27*k2^2 + 36*k2 + 21)*(k1max - (k2-1)) + 18*(S1(k1max) - S1(k2-1)) + 9*(S2(k1max) - S2(k2-1));
);
print("(12) ", c, ",", lift(s));


print(c, ",", lift(s));
}
