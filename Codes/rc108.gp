wiener_attack(n, e) = {
    my(a, apq, found, k, d, phin, p, q);
    a = contfrac(e/n);
    apq = contfracpnqn(a, #a);
    found = 0;
    for (i = 1, #a,
        k = apq[1, i]; d = apq[2, i];
        if (k == 0 || (e * d) % k != 1, next);
        phin = (e * d - 1) / k;
        [p, q] = polroots(x^2 - (n - phin + 1) * x + n);
        p = round(real(p)); q = round(real(q));
        if (p * q == n, found = 1; break);
    );
    if (found,
        print("Success!"); printf("%d = %d * %d\n\n", n, p, q); return(d),
        print("Fail!"); return(0);
    );
}


{
Msg = 527052005627025563334979410266214608870058706774369807477440119238473524893454959882652596192864886314833177329942446433573547519287620596940036558335740983810271503064948492663425315576482108055974415356757438138959801929670186199325345000688716342081877364884130165379971128518570467092626371748600039;
N = 600044820024309699731118027473601013914386694555098820168500217487396588629964228596191092136789680551453016833829762222104801359987695864415136344185954945286773854249588357461032878749312395957038728308263132923851840578660779147842182360934548523308654871204913382882966214741283716047066022304286877;
E = 515802370774054967302429892313797011792779662844280924717789277511057179095126766271149804990274103248450695404662412209029503883395360985550494492934002445385787731172407347263592136446777198260693567057834041124453307095288303167957306144521329947291244118700665840856941580663774265885674204692471913;

default(realprecision, 500);
d = wiener_attack(N, E);

MsgD = lift(Mod(Msg, N)^d);
MsgDText = Strchr(digits(MsgD, 256));
print(MsgDText);
}
